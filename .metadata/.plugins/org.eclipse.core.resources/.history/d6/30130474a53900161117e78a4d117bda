package com.johan.xnote.api.model;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.johan.xnote.api.model.NoteBook;
import com.johan.xnote.api.model.Note;
import com.johan.xnote.api.model.AccountType;
import com.johan.xnote.api.model.Account;
import com.johan.xnote.api.model.Sticky;

import com.johan.xnote.api.model.NoteBookDao;
import com.johan.xnote.api.model.NoteDao;
import com.johan.xnote.api.model.AccountTypeDao;
import com.johan.xnote.api.model.AccountDao;
import com.johan.xnote.api.model.StickyDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig noteBookDaoConfig;
    private final DaoConfig noteDaoConfig;
    private final DaoConfig accountTypeDaoConfig;
    private final DaoConfig accountDaoConfig;
    private final DaoConfig stickyDaoConfig;

    private final NoteBookDao noteBookDao;
    private final NoteDao noteDao;
    private final AccountTypeDao accountTypeDao;
    private final AccountDao accountDao;
    private final StickyDao stickyDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        noteBookDaoConfig = daoConfigMap.get(NoteBookDao.class).clone();
        noteBookDaoConfig.initIdentityScope(type);

        noteDaoConfig = daoConfigMap.get(NoteDao.class).clone();
        noteDaoConfig.initIdentityScope(type);

        accountTypeDaoConfig = daoConfigMap.get(AccountTypeDao.class).clone();
        accountTypeDaoConfig.initIdentityScope(type);

        accountDaoConfig = daoConfigMap.get(AccountDao.class).clone();
        accountDaoConfig.initIdentityScope(type);

        stickyDaoConfig = daoConfigMap.get(StickyDao.class).clone();
        stickyDaoConfig.initIdentityScope(type);

        noteBookDao = new NoteBookDao(noteBookDaoConfig, this);
        noteDao = new NoteDao(noteDaoConfig, this);
        accountTypeDao = new AccountTypeDao(accountTypeDaoConfig, this);
        accountDao = new AccountDao(accountDaoConfig, this);
        stickyDao = new StickyDao(stickyDaoConfig, this);

        registerDao(NoteBook.class, noteBookDao);
        registerDao(Note.class, noteDao);
        registerDao(AccountType.class, accountTypeDao);
        registerDao(Account.class, accountDao);
        registerDao(Sticky.class, stickyDao);
    }
    
    public void clear() {
        noteBookDaoConfig.getIdentityScope().clear();
        noteDaoConfig.getIdentityScope().clear();
        accountTypeDaoConfig.getIdentityScope().clear();
        accountDaoConfig.getIdentityScope().clear();
        stickyDaoConfig.getIdentityScope().clear();
    }

    public NoteBookDao getNoteBookDao() {
        return noteBookDao;
    }

    public NoteDao getNoteDao() {
        return noteDao;
    }

    public AccountTypeDao getAccountTypeDao() {
        return accountTypeDao;
    }

    public AccountDao getAccountDao() {
        return accountDao;
    }

    public StickyDao getStickyDao() {
        return stickyDao;
    }

}
