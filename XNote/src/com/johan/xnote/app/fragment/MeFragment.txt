package com.johan.xnote.app.fragment;

import com.johan.xnote.R;
import com.johan.xnote.app.activity.AboutActivity;
import com.johan.xnote.app.activity.LockScreenActivity;
import com.johan.xnote.app.activity.LoginActivity;
import com.johan.xnote.app.activity.ModifyPasswordActivity;
import com.johan.xnote.app.activity.PersonalInfoActivity;
import com.johan.xnote.app.api.IMe;
import com.johan.xnote.app.dialog.TipDialog;
import com.johan.xnote.core.presenter.MePresenter;
import com.tencent.bugly.beta.Beta;

import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.TextView;
import butterknife.InjectView;
import butterknife.OnClick;

public class MeFragment extends BaseFragment<MePresenter> implements IMe {
	
	@InjectView(R.id.me_lockscreen_state)
	public TextView lockscreenStateView;
	
	@InjectView(R.id.me_version_info)
	public TextView versionInfoView;
	
	private TipDialog logoutDialog, exitDialog;

	@Override
	protected void init(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		versionInfoView.setText(presenter.getVersionInfo(getActivity()));
	}
	
	@Override
	public void onResume() {
		// TODO Auto-generated method stub
		super.onResume();
		presenter.refreshLockScreenState();
	}

	@Override
	protected int getContentView() {
		// TODO Auto-generated method stub
		return R.layout.fragment_me;
	}

	@Override
	protected MePresenter getPresent() {
		// TODO Auto-generated method stub
		return new MePresenter(this);
	}
	
	@OnClick(R.id.me_personal_info)
	public void clickPersonalInfo(View view) {
		goActivity(PersonalInfoActivity.class);
	}
	
	@OnClick(R.id.me_modify_passwrod)
	public void clickModifyPassword(View view) {
		goActivity(ModifyPasswordActivity.class);
	}
	
	@OnClick(R.id.me_lockscreen)
	public void clickLockscreen(View view) {
		presenter.clickLockScreen();
	}
	
	@OnClick(R.id.me_update_version)
	public void clickupdateVersion(View view) {
		Beta.checkUpgrade();
	}
	
	@OnClick(R.id.me_about)
	public void clickAbout(View view) {
		goActivity(AboutActivity.class);
	}
	
	@OnClick(R.id.me_logout)
	public void clickLogout(View view) {
		if(null == logoutDialog) {
			logoutDialog = new TipDialog(getActivity());
			logoutDialog.setOkButtonListener("注销", new OnClickListener() {
				@Override
				public void onClick(View v) {
					// TODO Auto-generated method stub
					presenter.logout();
					goActivity(LoginActivity.class);
					getActivity().finish();
				}
			}).setCancelButtonListener("取消", new OnClickListener() {
				@Override
				public void onClick(View v) {
					// TODO Auto-generated method stub
					logoutDialog.dismiss();
				}
			}).setTitle("系统警告").setContent("注销用户将会清空所有数据，确定注销");
		}
		logoutDialog.show();
	}
	
	@OnClick(R.id.me_exit)
	public void clickExit(View view) {
		if(null == exitDialog) {
			exitDialog = new TipDialog(getActivity());
			exitDialog.setOkButtonListener("确定", new OnClickListener() {
				@Override
				public void onClick(View v) {
					// TODO Auto-generated method stub
					presenter.exit();
					goActivity(LoginActivity.class);
					getActivity().finish();
				}
			}).setCancelButtonListener("取消", new OnClickListener() {
				@Override
				public void onClick(View v) {
					// TODO Auto-generated method stub
					exitDialog.dismiss();
				}
			}).setTitle("系统提示").setContent("确认退出");
		}
		exitDialog.show();
	}

	@Override
	public void updateLockScreenState(boolean hasLockPassword) {
		// TODO Auto-generated method stub
		String lockScreenStateTip = hasLockPassword ? "开" : "关";
		lockscreenStateView.setText(lockScreenStateTip);
	}

	@Override
	public void goSetLockscreen() {
		// TODO Auto-generated method stub
		goActivity(LockScreenActivity.class);
	}
	
}
